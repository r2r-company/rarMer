# Generated by Django 5.0.6 on 2024-07-12 20:04

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DriveType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Тип накопичувача')),
            ],
            options={
                'verbose_name': 'Тип накопичувача',
                'verbose_name_plural': 'Типи накопичувачів',
            },
        ),
        migrations.CreateModel(
            name='FormFactorHDD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Форм-фактор HDD')),
            ],
            options={
                'verbose_name': 'Форм-фактор HDD',
                'verbose_name_plural': 'Форм-фактори HDD',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Назва номенклатури')),
            ],
            options={
                'verbose_name': 'Номенклатура',
                'verbose_name_plural': 'Номенклатура',
            },
        ),
        migrations.CreateModel(
            name='GPUFamily',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Сімейство графіки')),
            ],
            options={
                'verbose_name': 'Сімейство графіки',
                'verbose_name_plural': 'Сімейства графіки',
            },
        ),
        migrations.CreateModel(
            name='GPUFormFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Форм-фактор відеокарти')),
            ],
            options={
                'verbose_name': 'Форм-фактор відеокарти',
                'verbose_name_plural': 'Форм-фактори відеокарт',
            },
        ),
        migrations.CreateModel(
            name='GroupNomenklatyra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Назва групи')),
            ],
            options={
                'verbose_name': 'Група номенклатури',
                'verbose_name_plural': 'Групи номенкла   тури',
            },
        ),
        migrations.CreateModel(
            name='HDDInterface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Інтерфейс підключення HDD')),
            ],
            options={
                'verbose_name': 'Інтерфейс підключення HDD',
                'verbose_name_plural': 'Інтерфейси підключення HDD',
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Назва виробника')),
            ],
            options={
                'verbose_name': 'Виробник',
                'verbose_name_plural': 'Виробники',
            },
        ),
        migrations.CreateModel(
            name='PSUPurpose',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Призначення блока живлення')),
            ],
            options={
                'verbose_name': 'Призначення блока живлення',
                'verbose_name_plural': 'Призначення блоків живлення',
            },
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='nomenklatyra.product')),
                ('intended_use', models.CharField(blank=True, max_length=255, null=True, verbose_name='Призначення материнської плати')),
                ('socket', models.CharField(blank=True, max_length=255, null=True, verbose_name='Сокет')),
                ('chipset_model', models.CharField(blank=True, max_length=255, null=True, verbose_name='Модель чіпсета')),
                ('ram_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Тип ОЗУ')),
                ('onboard_video', models.CharField(blank=True, max_length=255, null=True, verbose_name='Вбудоване відео')),
                ('raid_controller', models.CharField(blank=True, max_length=255, null=True, verbose_name='Контролер RAID')),
                ('form_factor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Форма-фактор материнської плати')),
            ],
            options={
                'verbose_name': 'Материнська плата',
                'verbose_name_plural': 'Материнські плати',
            },
            bases=('nomenklatyra.product',),
        ),
        migrations.CreateModel(
            name='Processor',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='nomenklatyra.product')),
                ('family', models.CharField(blank=True, max_length=255, null=True, verbose_name='Сімейство процесора')),
                ('socket', models.CharField(blank=True, max_length=255, null=True, verbose_name='Сокет')),
                ('cores', models.IntegerField(blank=True, null=True, verbose_name='Кількість ядер')),
                ('threads', models.IntegerField(blank=True, null=True, verbose_name='Кількість потоків')),
                ('base_clock', models.CharField(blank=True, max_length=255, null=True, verbose_name='Базова тактова частота процесора')),
                ('integrated_graphics', models.CharField(blank=True, max_length=255, null=True, verbose_name='Графічне ядро')),
            ],
            options={
                'verbose_name': 'Процесор',
                'verbose_name_plural': 'Процесори',
            },
            bases=('nomenklatyra.product',),
        ),
        migrations.CreateModel(
            name='Ram',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='nomenklatyra.product')),
                ('intended_use', models.CharField(blank=True, max_length=255, null=True, verbose_name="Призначення оперативної пам'яті")),
                ('capacity', models.CharField(blank=True, max_length=255, null=True, verbose_name="Обсяг пам'яті")),
                ('type', models.CharField(blank=True, max_length=255, null=True, verbose_name="Тип пам'яті")),
                ('frequency', models.CharField(blank=True, max_length=255, null=True, verbose_name="Частота пам'яті")),
            ],
            options={
                'verbose_name': "Оперативна пам'ять",
                'verbose_name_plural': "Оперативні пам'яті",
            },
            bases=('nomenklatyra.product',),
        ),
        migrations.AddField(
            model_name='product',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='nomenklatyra.groupnomenklatyra', verbose_name='Група'),
        ),
        migrations.AddField(
            model_name='product',
            name='manufacturer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nomenklatyra.manufacturer', verbose_name='Виробник'),
        ),
        migrations.CreateModel(
            name='GPU',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='nomenklatyra.product')),
                ('intended_use', models.CharField(blank=True, max_length=255, null=True, verbose_name='Призначення відеокарти')),
                ('chip', models.CharField(blank=True, max_length=255, null=True, verbose_name='Графічний чіп')),
                ('interface', models.CharField(blank=True, max_length=255, null=True, verbose_name='Інтерфейс підключення відеокарти')),
                ('memory_capacity', models.CharField(blank=True, max_length=255, null=True, verbose_name="Обсяг пам'яті відеокарти")),
                ('memory_type', models.CharField(blank=True, max_length=255, null=True, verbose_name="Тип пам'яті відеокарти")),
                ('connectors', models.CharField(blank=True, max_length=255, null=True, verbose_name="Роз'єми відеокарти")),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nomenklatyra.gpufamily', verbose_name='Сімейство графіки')),
                ('form_factor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nomenklatyra.gpuformfactor', verbose_name='Форм-фактор відеокарти')),
            ],
            options={
                'verbose_name': 'Відеокарта',
                'verbose_name_plural': 'Відеокарти',
            },
            bases=('nomenklatyra.product',),
        ),
        migrations.CreateModel(
            name='HDD',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='nomenklatyra.product')),
                ('capacity', models.CharField(blank=True, max_length=255, null=True, verbose_name="Обсяг пам'яті")),
                ('drive_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nomenklatyra.drivetype', verbose_name='Тип накопичувача')),
                ('form_factor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nomenklatyra.formfactorhdd', verbose_name='Форм-фактор HDD')),
                ('interface', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nomenklatyra.hddinterface', verbose_name='Інтерфейс підключення HDD')),
            ],
            options={
                'verbose_name': 'HDD',
                'verbose_name_plural': 'HDD-диски',
            },
            bases=('nomenklatyra.product',),
        ),
        migrations.CreateModel(
            name='PSU',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='nomenklatyra.product')),
                ('intended_use', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nomenklatyra.psupurpose', verbose_name='Призначення блока живлення')),
            ],
            options={
                'verbose_name': 'Блок живлення',
                'verbose_name_plural': 'Блоки живлення',
            },
            bases=('nomenklatyra.product',),
        ),
        migrations.CreateModel(
            name='SSD',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='nomenklatyra.product')),
                ('capacity', models.CharField(blank=True, max_length=255, null=True, verbose_name="Обсяг пам'яті")),
                ('drive_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nomenklatyra.drivetype', verbose_name='Тип накопичувача')),
                ('form_factor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nomenklatyra.formfactorhdd', verbose_name='Форм-фактор SSD')),
                ('interface', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nomenklatyra.hddinterface', verbose_name='Інтерфейс підключення SSD')),
            ],
            options={
                'verbose_name': 'SSD',
                'verbose_name_plural': 'SSD-диски',
            },
            bases=('nomenklatyra.product',),
        ),
    ]
